---
- name: Set the authorized_keys variable
  ansible.builtin.set_fact:
    user_authorized_keys: >-
      {%- set user_authorized_key_pairs = [] -%}
      {%- for user, user_info in system.users.items() -%}
        {%- set user_authorized_key_list = [] -%}
        {%- for authorized_key_list in (user_info.authorized_keys|default({}, true)).values() -%}
          {%- if authorized_key_list is string -%}
            {%- set _ = user_authorized_key_list.append(authorized_key_list) -%}
          {%- else -%}
            {%- for a in authorized_key_list -%}
              {%- set _ = user_authorized_key_list.append(a) -%}
            {%- endfor -%}
          {%- endif -%}
        {%- endfor -%}
          {%- set _ = user_authorized_key_pairs.append({
            'user': user,
            'key': (user_authorized_key_list | join('\n')),
          }) -%}
      {%- endfor -%}
      {{- user_authorized_key_pairs -}}

- name: Add authorized keys
  loop: "{{ user_authorized_keys }}"
  failed_when: "{{ add_authorized_keys.failed and not ansible_check_mode }}"
  register: add_authorized_keys
  loop_control:
    label: '{{ item.user }} public_keys="{{ item.key }}"'
  ansible.posix.authorized_key:
    user: "{{ item.user }}"
    key: "{{ item.key }}"
    exclusive: "{{ system.features.authorized_keys_delete | default(False) }}"
